image: node:20

stages:
  - build
  - deploy

# Variables used for Nx affected calculation.
variables:
  NX_HEAD: "$CI_COMMIT_SHA"
  NX_BASE: "${CI_MERGE_REQUEST_DIFF_BASE_SHA:-$CI_COMMIT_BEFORE_SHA}"

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - node_modules/
    - .nx/

build:
  stage: build
  script:
    - npm ci
    # Build only the projects that are affected (this will include your Lambda code)
    - npx nx affected:build --base=$NX_BASE --head=$NX_HEAD
  artifacts:
    paths:
      - dist/
      - apps/**/lambda_deployment.zip
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" || $CI_PIPELINE_SOURCE == "merge_request_event"'

deploy:dev:
  stage: deploy
  image: hashicorp/terraform:1.8.0
  script:
    # Ensure Node dependencies are available if needed for Nx
    - npm ci
    # Deploy the unified infrastructure code; this target is defined in your Nx workspace 
    # (for example, in a project named "infra-dev" whose "deploy" target runs Terraform commands)
    - npx nx run infra-dev:deploy --base=$NX_BASE --head=$NX_HEAD
  environment:
    name: dev
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
